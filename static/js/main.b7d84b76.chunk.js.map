{"version":3,"sources":["constants.js","lib/update-action-state.js","App.js","Header.js","WarnU2fCompatibility.js","Footer.js","lib/human-readable-satoshis.js","lib/get-reward-end-date.js","lib/human-reward-end-date.js","Utxos.js","TxidLink.js","ClaimRewardsButton.js","Accounts.js","lib/account-discovery.js","CheckRewardsButton.js","index.js","lib/blockchain.js","lib/ledger.js","lib/get-address.js","ActionListModal.js","Modal.js","Boolean.js"],"names":["__webpack_require__","d","__webpack_exports__","SERVICE_FEE_ADDRESS","SERVICE_FEE_PERCENT","TX_FEE","INSIGHT_API_URL","INSIGHT_EXPLORER_URL","KOMODO","messagePrefix","bip32","public","private","pubKeyHash","scriptHash","wif","updateActionState","context","action","value","setState","prevState","Object","_Volumes_Data_project_ledger_kmd_reward_claim_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","actions","_Volumes_Data_project_ledger_kmd_reward_claim_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","state","App","_this","initialState","resetState","handleRewardData","_ref","accounts","tiptime","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Header__WEBPACK_IMPORTED_MODULE_8__","_CheckRewardsButton__WEBPACK_IMPORTED_MODULE_9__","this","disabled","isEqual","onClick","length","Fragment","src","alt","_Accounts__WEBPACK_IMPORTED_MODULE_10__","_WarnU2fCompatibility__WEBPACK_IMPORTED_MODULE_11__","_Footer__WEBPACK_IMPORTED_MODULE_12__","target","rel","href","concat","repository","React","Component","hot","module","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_svgr_webpack_prettier_svgo_cryptocurrency_icons_svg_color_kmd_svg__WEBPACK_IMPORTED_MODULE_1__","Header","children","role","aria-label","WarnU2fCompatibility","u2fSupported","isSupported","react__WEBPACK_IMPORTED_MODULE_7___default","_Modal__WEBPACK_IMPORTED_MODULE_9__","title","show","Footer","humanReadableSatoshis","satoshis","scientificToDecimal","toBitcoin","getRewardEndDate","locktime","height","humanRewardEndDate","utxo","endDate","getRewardEndDateTimestamp","distanceInWordsToNow","addSuffix","Utxos","utxos","headings","react_default","map","heading","key","id","address","Boolean","getKomodoRewards","objectSpread","TxidLink","txid","ClaimRewardsButton","getUnusedAddressIndex","props","account","addresses","filter","isChange","getUnusedAddress","getAddress","externalNode","derive","publicKey","getOutputs","_this$props$account","balance","claimableAmount","serviceFee","outputs","push","claimRewards","_callee","_this$props$account2","accountIndex","currentAction","unusedAddress","derivationPath","ledgerUnusedAddress","rewardClaimTransaction","_ref2","regenerator_default","wrap","_context","prev","next","isClaimingRewards","assertThisInitialized","ledger","isAvailable","sent","Error","createTransaction","blockchain","broadcast","handleRewardClaim","success","src_TxidLink","t0","error","message","stop","isClaimableAmount","_this$getOutputs","_this$getOutputs2","slicedToArray","userOutput","feeOutput","isClaimed","ActionListModal","assign","handleClose","connect","icon","description","confirmAddress","approveTransaction","broadcastTransaction","Account","claimTxid","_this$props","rewards","_this$state","Math","max","src_Utxos","src_ClaimRewardsButton","Accounts","Accounts_Account","walkDerivationPath","asyncToGenerator","mark","node","addressConcurrency","gapLimit","consecutiveUnusedAddresses","addressIndex","addressApiRequests","i","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_address","undefined","Promise","all","Symbol","iterator","done","totalReceived","unconfirmedBalance","t1","return","finish","abrupt","slice","_x","apply","arguments","getAccountAddresses","_callee2","xpub","internalNode","_ref3","_ref4","externalAddresses","internalAddresses","addAddressMeta","_context2","getXpub","bitcoin","fromBase58","_ref5","toConsumableArray","_x2","getAddressUtxos","_ref6","_callee4","_context4","getUtxos","_ref7","_callee3","addressInfo","_ref8","_ref9","rawtx","_context3","find","getRawTransaction","getTransaction","vout","_x4","_x3","accountDiscovery","_ref10","_callee5","_context5","CheckRewardsButton","calculateRewardData","reduce","floor","scanAddresses","isCheckingRewards","getTipTime","approve","r","react_dom__WEBPACK_IMPORTED_MODULE_1__","react_dom__WEBPACK_IMPORTED_MODULE_1___default","_App__WEBPACK_IMPORTED_MODULE_4__","ReactDOM","render","document","getElementById","get","_Volumes_Data_project_ledger_kmd_reward_claim_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Volumes_Data_project_ledger_kmd_reward_claim_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","endpoint","postData","opts","response","body","JSON","stringify","headers","Headers","append","method","fetch","includes","json","text","ok","getBestBlockHash","getBlock","blockHash","bestblockhash","block","time","addrs","join","transaction","getDevice","transport","TransportU2F","create","Btc","close","getWalletPublicKey","verify","bitcoinAddress","inputs","associatedKeysets","outputScript","unixtime","lockTime","additionals","expiryHeight","transactionHex","tx","splitTransaction","_x5","buildOutputScript","Date","now","Buffer","from","createPaymentTransactionNew","_callee6","chainCode","pathArray","depth","childNumber","_context6","bip32Path","fromString","toPathArray","pop","createXpub","_x6","_constants__WEBPACK_IMPORTED_MODULE_0__","bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_1__","bitcoinjs_lib__WEBPACK_IMPORTED_MODULE_1___default","payments","p2pkh","pubkey","network","_ref$actions","modalProps","_Volumes_Data_project_ledger_kmd_reward_claim_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","_Modal__WEBPACK_IMPORTED_MODULE_2__","isCloseable","keys","_actions$action","_Boolean__WEBPACK_IMPORTED_MODULE_3__","aria-hidden","Modal"],"mappings":"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","file":"static/js/main.b7d84b76.chunk.js","sourcesContent":["export const SERVICE_FEE_ADDRESS = 'RQzv9tVzCHXN9j3kF5qNzms555zzLC9HQF';\nexport const SERVICE_FEE_PERCENT = 0;\nexport const TX_FEE = 20000;\nexport const INSIGHT_API_URL = 'https://kmd.explorer.dexstats.info/insight-api-komodo/';\nexport const INSIGHT_EXPLORER_URL = 'https://kmdexplorer.io/';\nexport const KOMODO = {\n  messagePrefix: '\\x18Komodo Signed Message:\\n',\n  bip32: {\n    public: 0x0488B21E,\n    private: 0x0488ADE4\n  },\n  pubKeyHash: 0x3C,\n  scriptHash: 0x55,\n  wif: 0xBC\n};\n","const updateActionState = (context, action, value) => {\n  context.setState(prevState => ({\n    ...prevState,\n    actions: {\n      ...prevState.actions,\n      [action]: {\n        ...prevState.actions[action],\n        state: value\n      }\n    }\n  }));\n};\nexport default updateActionState;\n","import React from 'react';\nimport {hot} from 'react-hot-loader';\nimport {isEqual} from 'lodash';\nimport Header from './Header';\nimport CheckRewardsButton from './CheckRewardsButton';\nimport Accounts from './Accounts';\nimport WarnU2fCompatibility from './WarnU2fCompatibility';\nimport Footer from './Footer';\nimport {repository} from '../package.json';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      accounts: [],\n      tiptime: null\n    };\n  }\n\n  resetState = () => this.setState(this.initialState);\n\n  handleRewardData = ({accounts, tiptime}) => {\n    this.setState({accounts, tiptime});\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header>\n          <div className=\"buttons\">\n            <CheckRewardsButton handleRewardData={this.handleRewardData}>\n              <strong>Check Rewards</strong>\n            </CheckRewardsButton>\n            <button className=\"button is-light\" disabled={isEqual(this.state, this.initialState)} onClick={this.resetState}>\n              Reset\n            </button>\n          </div>\n        </Header>\n\n        <section className=\"main\">\n          {this.state.accounts.length === 0 ? (\n            <>\n              <div className=\"container content\">\n                <h2>Claim your KMD rewards on your Ledger device.</h2>\n                <h4>As a gift to the community, we have decided to make this service free! There is no longer a fee to claim rewards. ❤️</h4>\n                <p>Make sure the KMD app and firmware on your Ledger are up to date, then connect your Ledger, open the KMD app, and click the \"Check Rewards\" button.</p>\n              </div>\n              <img className=\"ledger-graphic\" src=\"ledger.svg\" alt=\"Ledger Nano S\"/>\n            </>\n          ) : (\n            <Accounts {...this.state} />\n          )}\n        </section>\n\n        <WarnU2fCompatibility />\n\n        <Footer>\n          <p>\n            <strong>Ledger KMD Reward Claim</strong> by <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/atomiclabs\">Atomic Labs</a>.\n            The <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/${repository}`}>source code</a> is licensed under <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/${repository}/blob/master/LICENSE`}>MIT</a>.\n            <br />\n            View the <a target=\"_blank\" rel=\"noopener noreferrer\" href={`https://github.com/${repository}#usage`}>README</a> for usage instructions.\n          </p>\n        </Footer>\n      </div>\n    );\n  }\n}\n\nexport default hot(module)(App);\n","import React from 'react';\nimport { ReactComponent as KmdIcon } from 'cryptocurrency-icons/svg/color/kmd.svg';\nimport './Header.scss';\n\nconst Header = ({children}) => (\n  <nav className=\"Header navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n    <div className=\"container\">\n\n      <div className=\"navbar-brand\">\n        <div className=\"navbar-item\">\n          <KmdIcon className=\"KmdIcon\"/>\n        </div>\n        <h1 className=\"navbar-item\">\n          <strong>Ledger KMD Reward Claim</strong>\n        </h1>\n      </div>\n\n      <div className=\"navbar-menu\">\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            {children}\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </nav>\n);\n\nexport default Header;\n","import React from 'react';\nimport {isSupported} from 'u2f-api';\nimport Modal from './Modal';\n\nclass WarnU2fCompatibility extends React.Component {\n  state = {\n    u2fSupported: null\n  };\n\n  async componentDidMount() {\n    this.setState({u2fSupported: await isSupported()});\n  }\n\n  render() {\n    return (\n      <Modal title=\"Warning: U2F Not Supported in This Browser\" show={this.state.u2fSupported === false}>\n        <p>The U2F API is required for the web browser to communicate with the Ledger device.</p>\n        <p>Try using Chrome or Opera instead.</p>\n        <p>You can view a list of U2F supporting browsers at <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://caniuse.com/#feat=u2f\">caniuse.com/#feat=u2f</a>.</p>\n      </Modal>\n    );\n  }\n}\n\nexport default WarnU2fCompatibility;\n","import React from 'react';\nimport './Footer.scss';\n\nconst Footer = ({children}) => (\n  <footer className=\"Footer\">\n    <div className=\"content has-text-centered\">\n      {children}\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import {toBitcoin} from 'satoshi-bitcoin';\nimport scientificToDecimal from 'scientific-to-decimal';\n\nconst humanReadableSatoshis = satoshis => scientificToDecimal(toBitcoin(satoshis));\n\nexport default humanReadableSatoshis;\n","const KOMODO_ENDOFERA = 7777777;\nconst LOCKTIME_THRESHOLD = 500000000;\nconst ONE_MONTH_CAP_HARDFORK = 1000000;\nconst ONE_SECOND = 1000;\nconst ONE_MONTH = 31 * 24 * 60 * 60 * ONE_SECOND;\nconst ONE_YEAR = 365 * 24 * 60 * 60 * ONE_SECOND;\n\nconst getRewardEndDate = ({locktime, height}) => {\n  // Return false if UTXO for rewards\n  if (\n    (height >= KOMODO_ENDOFERA) ||\n    (locktime < LOCKTIME_THRESHOLD) ||\n    (!height)\n  ) {\n    return false;\n  }\n\n  // Convert locktime to milliseconds\n  locktime = (locktime * ONE_SECOND);\n\n  // Get reward period\n  const rewardPeriod = (height >= ONE_MONTH_CAP_HARDFORK) ? ONE_MONTH : ONE_YEAR;\n\n  return locktime + rewardPeriod;\n};\n\nexport default getRewardEndDate;\n","import {distanceInWordsToNow} from 'date-fns';\nimport getRewardEndDateTimestamp from './get-reward-end-date';\n\nconst humanRewardEndDate = utxo => {\n  const endDate = getRewardEndDateTimestamp(utxo);\n\n  return endDate ? distanceInWordsToNow(endDate, {addSuffix: true}) : 'N/A';\n};\n\nexport default humanRewardEndDate;\n","import React from 'react';\nimport getKomodoRewards from 'get-komodo-rewards';\nimport humanReadableSatoshis from './lib/human-readable-satoshis';\nimport humanRewardEndDate from './lib/human-reward-end-date';\nimport Boolean from './Boolean';\n\nconst Utxos = ({utxos, tiptime}) => {\n  const headings = ['Address', 'Value', 'Locktime', 'Rewards', 'Rewards Stop Accruing'];\n\n  return (\n    <table className=\"table is-striped\">\n      <thead>\n        <tr>\n          {headings.map(heading => <th key={heading}>{heading}</th>)}\n        </tr>\n      </thead>\n      <tfoot>\n        <tr>\n          {headings.map(heading => <th key={heading}>{heading}</th>)}\n        </tr>\n      </tfoot>\n      <tbody>\n        {utxos.map(utxo => (\n          <tr key={utxo.id} className=\"utxo\">\n            <th>{utxo.address}</th>\n            <td>{humanReadableSatoshis(utxo.satoshis)} KMD</td>\n            <td><Boolean value={utxo.locktime} /></td>\n            <td>{humanReadableSatoshis(getKomodoRewards({tiptime, ...utxo}))} KMD</td>\n            <td>{humanRewardEndDate(utxo)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Utxos;\n","import React from 'react';\nimport {INSIGHT_EXPLORER_URL} from './constants';\n\nconst TxidLink = ({txid}) => (\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${INSIGHT_EXPLORER_URL}tx/${txid}`}>{txid}</a>\n);\n\nexport default TxidLink;\n","import React from 'react';\nimport ActionListModal from './ActionListModal';\nimport TxidLink from './TxidLink';\nimport ledger from './lib/ledger';\nimport blockchain from './lib/blockchain';\nimport getAddress from './lib/get-address';\nimport updateActionState from './lib/update-action-state';\nimport humanReadableSatoshis from './lib/human-readable-satoshis';\nimport {SERVICE_FEE_PERCENT, SERVICE_FEE_ADDRESS} from './constants';\n\nclass ClaimRewardsButton extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      isClaimingRewards: false,\n      error: false,\n      success: false,\n      actions: {\n        connect: {\n          icon: 'fab fa-usb',\n          description: <div>Connect and unlock your Ledger, then open the Komodo app on your device.</div>,\n          state: null\n        },\n        confirmAddress: {\n          icon: 'fas fa-search-dollar',\n          description: <div>Confirm the address on your device matches the new unused address shown above.</div>,\n          state: null\n        },\n        approveTransaction: {\n          icon: 'fas fa-key',\n          description: <div>Approve the transaction on your device after carefully checking the values and addresses match those shown above.</div>,\n          state: null\n        },\n        broadcastTransaction: {\n          icon: 'fas fa-broadcast-tower',\n          description: <div>Broadcasting the reward claim transaction to the network.</div>,\n          state: null\n        }\n      }\n    };\n  }\n\n  resetState = () => this.setState(this.initialState);\n\n  getUnusedAddressIndex = () => this.props.account.addresses.filter(address => !address.isChange).length;\n\n  getUnusedAddress = () => getAddress(this.props.account.externalNode.derive(this.getUnusedAddressIndex()).publicKey);\n\n  getOutputs = () => {\n    const {\n      balance,\n      claimableAmount,\n      serviceFee,\n    } = this.props.account;\n\n    const outputs = [\n      {address: this.getUnusedAddress(), value: (balance + claimableAmount)}\n    ];\n\n    if (serviceFee > 0) {\n      outputs.push({address: SERVICE_FEE_ADDRESS, value: serviceFee})\n    }\n\n    return outputs;\n  };\n\n  claimRewards = async () => {\n    const {\n      accountIndex,\n      utxos,\n    } = this.props.account;\n\n    this.setState(prevState => ({\n      ...this.initialState,\n      isClaimingRewards: true,\n    }));\n\n    let currentAction;\n    try {\n      currentAction = 'connect';\n      updateActionState(this, currentAction, 'loading');\n      const ledgerIsAvailable = await ledger.isAvailable();\n      if (!ledgerIsAvailable) {\n        throw new Error('Ledger device is unavailable!');\n      }\n      updateActionState(this, currentAction, true);\n\n      currentAction = 'confirmAddress';\n      updateActionState(this, currentAction, 'loading');\n      const unusedAddress = this.getUnusedAddress();\n      const derivationPath = `44'/141'/${accountIndex}'/0/${this.getUnusedAddressIndex()}`;\n      const verify = true;\n      const ledgerUnusedAddress = await ledger.getAddress(derivationPath, verify);\n      if(ledgerUnusedAddress !== unusedAddress) {\n        throw new Error(`Ledger derived address \"${ledgerUnusedAddress}\" doesn't match browser derived address \"${unusedAddress}\"`);\n      }\n      updateActionState(this, currentAction, true);\n\n      currentAction = 'approveTransaction';\n      updateActionState(this, currentAction, 'loading');\n      const outputs = this.getOutputs();\n      const rewardClaimTransaction = await ledger.createTransaction(utxos, outputs);\n      updateActionState(this, currentAction, true);\n\n      currentAction = 'broadcastTransaction';\n      updateActionState(this, currentAction, 'loading');\n      const {txid} = await blockchain.broadcast(rewardClaimTransaction);\n      updateActionState(this, currentAction, true);\n\n      this.props.handleRewardClaim(txid);\n      this.setState({\n        success: <>Claim TXID: <TxidLink txid={txid}/></>\n      });\n    } catch (error) {\n      updateActionState(this, currentAction, false);\n      this.setState({error: error.message});\n    }\n  };\n\n  render() {\n    const {isClaimingRewards} = this.state;\n    const isClaimableAmount = (this.props.account.claimableAmount > 0);\n    const [userOutput, feeOutput] = this.getOutputs();\n\n    return (\n      <>\n        <button className=\"button is-primary\" disabled={this.props.isClaimed || !isClaimableAmount} onClick={this.claimRewards}>\n          {this.props.children}\n        </button>\n        <ActionListModal\n          {...this.state}\n          title=\"Claiming Rewards\"\n          handleClose={this.resetState}\n          show={isClaimingRewards}>\n          <p>\n            You should receive a total of <strong>{humanReadableSatoshis(userOutput.value)} KMD</strong> to the new unused address: <strong>{userOutput.address}</strong><br />\n            {feeOutput ? (\n              <>There will also be a {SERVICE_FEE_PERCENT}% service fee of <strong>{humanReadableSatoshis(feeOutput.value)} KMD</strong> to: <strong>{feeOutput.address}</strong></>\n            ) : null}\n          </p>\n        </ActionListModal>\n      </>\n    );\n  }\n}\n\nexport default ClaimRewardsButton;\n","import React from 'react';\nimport Utxos from './Utxos';\nimport ClaimRewardsButton from './ClaimRewardsButton';\nimport TxidLink from './TxidLink';\nimport {SERVICE_FEE_PERCENT, TX_FEE} from './constants';\nimport humanReadableSatoshis from './lib/human-readable-satoshis';\nimport './Accounts.scss';\nimport './Account.scss';\n\nclass Account extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      isClaimed: false,\n      claimTxid: null\n    };\n  }\n\n  handleRewardClaim = txid => {\n    this.setState({\n      isClaimed: true,\n      claimTxid: txid\n    });\n  };\n\n  render() {\n    const {account, tiptime} = this.props;\n    const {\n      accountIndex,\n      utxos,\n      balance,\n      rewards,\n      claimableAmount,\n      serviceFee\n    } = account;\n\n    const isClaimableAmount = (claimableAmount > 0);\n    const {isClaimed, claimTxid} = this.state;\n\n    return (\n      <div className={`Account column is-full ${isClaimed ? 'is-claimed' : ''}`}>\n        <div className=\"box\">\n          <div className=\"content\">\n            <h2>\n              Account {accountIndex + 1}\n              <div className=\"balance\">\n                {humanReadableSatoshis(balance)} KMD\n              </div>\n              <small>\n                + {humanReadableSatoshis(Math.max(0, claimableAmount))} KMD Claimable Rewards\n              </small>\n            </h2>\n            {(utxos.length > 0) && (\n              <>\n                <h4>UTXOs</h4>\n                <Utxos utxos={utxos} tiptime={tiptime} />\n              </>\n            )}\n            {isClaimableAmount && (\n              <>\n                <h4>Breakdown</h4>\n                <table className=\"breakdown\">\n                  <tbody>\n                    <tr>\n                      <td>{humanReadableSatoshis(rewards)} KMD</td>\n                      <td>Rewards accrued</td>\n                    </tr>\n                    {(SERVICE_FEE_PERCENT !== 0 && serviceFee !== 0) && (\n                      <tr>\n                        <td>{humanReadableSatoshis(serviceFee)} KMD</td>\n                        <td>{SERVICE_FEE_PERCENT}% service fee</td>\n                      </tr>\n                    )}\n                    <tr>\n                      <td>{humanReadableSatoshis(TX_FEE)} KMD</td>\n                      <td>Network transaction fee</td>\n                    </tr>\n                    <tr>\n                      <td><strong>{humanReadableSatoshis(claimableAmount)} KMD</strong></td>\n                      <td>Total claimable amount</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </>\n            )}\n            {(isClaimed && claimTxid) && (\n              <div className=\"is-pulled-right\">\n                Claim TXID: <TxidLink txid={claimTxid}/>\n              </div>\n            )}\n            <ClaimRewardsButton account={account} handleRewardClaim={this.handleRewardClaim} isClaimed={this.state.isClaimed}>\n              Claim Rewards\n            </ClaimRewardsButton>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Accounts = ({accounts, tiptime}) => (\n  <div className=\"Accounts\">\n    <div className=\"container\">\n      <div className=\"columns is-multiline\">\n        {accounts.map((account) => (\n          <Account\n            key={account.accountIndex}\n            account={account}\n            tiptime={tiptime}\n            />\n        ))}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Accounts;\n","import ledger from './ledger';\nimport blockchain from './blockchain';\nimport getAddress from './get-address';\nimport bitcoin from 'bitcoinjs-lib';\n\nconst walkDerivationPath = async node => {\n  const addressConcurrency = 10;\n  const gapLimit = 20;\n  const addresses = [];\n  let consecutiveUnusedAddresses = 0;\n  let addressIndex = 0;\n\n  while (consecutiveUnusedAddresses < gapLimit) {\n    const addressApiRequests = [];\n\n    for (let i = 0; i < addressConcurrency; i++) {\n      const address = getAddress(node.derive(addressIndex).publicKey);\n\n      addressApiRequests.push(blockchain.getAddress(address));\n      addresses.push({address, addressIndex});\n\n      addressIndex++;\n    }\n\n    for (const address of await Promise.all(addressApiRequests)) {\n      if (address.totalReceived > 0 || address.unconfirmedBalance > 0) {\n        consecutiveUnusedAddresses = 0;\n      } else {\n        consecutiveUnusedAddresses++;\n      }\n    }\n  }\n\n  return addresses.slice(0, addresses.length - consecutiveUnusedAddresses);\n};\n\nconst getAccountAddresses = async account => {\n  const derivationPath = `44'/141'/${account}'`;\n  const xpub = await ledger.getXpub(derivationPath);\n  const node = bitcoin.bip32.fromBase58(xpub);\n  const externalNode = node.derive(0);\n  const internalNode = node.derive(1);\n\n  const [externalAddresses, internalAddresses] = await Promise.all([\n    walkDerivationPath(externalNode),\n    walkDerivationPath(internalNode)\n  ]);\n\n  const addAddressMeta = ({isChange}) => {\n    return address => ({\n      ...address,\n      account,\n      isChange,\n      derivationPath: `${derivationPath}/${isChange ? 1 : 0}/${address.addressIndex}`\n    });\n  };\n\n  const addresses = [\n    ...externalAddresses.map(addAddressMeta({isChange: false})),\n    ...internalAddresses.map(addAddressMeta({isChange: true}))\n  ];\n\n  return {\n    externalNode,\n    internalNode,\n    addresses\n  };\n};\n\nconst getAddressUtxos = async addresses => {\n  const utxos = await blockchain.getUtxos(addresses.map(a => a.address));\n\n  return await Promise.all(utxos.map(async utxo => {\n    const addressInfo = addresses.find(a => a.address === utxo.address);\n\n    const [{rawtx}, {locktime}] = await Promise.all([\n      blockchain.getRawTransaction(utxo.txid),\n      blockchain.getTransaction(utxo.txid)\n    ]);\n\n    return {\n      id: `${utxo.txid}:${utxo.vout}`,\n      ...addressInfo,\n      ...utxo,\n      locktime,\n      rawtx\n    };\n  }));\n};\n\nconst accountDiscovery = async () => {\n  const accounts = [];\n\n  let accountIndex = 0;\n  while (true) {\n    const account = await getAccountAddresses(accountIndex);\n\n    if (account.addresses.length === 0) {\n      break;\n    }\n\n    account.utxos = await getAddressUtxos(account.addresses);\n    account.accountIndex = accountIndex;\n\n    accounts.push(account);\n    accountIndex++;\n  }\n\n  return accounts;\n};\n\nexport default accountDiscovery;\n","import React from 'react';\nimport getKomodoRewards from 'get-komodo-rewards';\nimport ledger from './lib/ledger';\nimport accountDiscovery from './lib/account-discovery';\nimport blockchain from './lib/blockchain';\nimport updateActionState from './lib/update-action-state';\nimport {SERVICE_FEE_PERCENT, TX_FEE} from './constants';\nimport ActionListModal from './ActionListModal';\n\nclass CheckRewardsButton extends React.Component {\n  state = this.initialState;\n\n  get initialState() {\n    return {\n      isCheckingRewards: false,\n      error: false,\n      actions: {\n        connect: {\n          icon: 'fab fa-usb',\n          description: <div>Connect and unlock your Ledger, then open the Komodo app on your device.</div>,\n          state: null\n        },\n        approve: {\n          icon: 'fas fa-microchip',\n          description: <div>Approve all public key export requests on your device. <strong>There will be multiple requests</strong>.</div>,\n          state: null\n        }\n      }\n    };\n  }\n\n  resetState = () => this.setState(this.initialState);\n\n  calculateRewardData = ({accounts, tiptime}) => accounts.map(account => {\n    account.balance = account.utxos.reduce((balance, utxo) => balance + utxo.satoshis, 0);\n    account.rewards = account.utxos.reduce((rewards, utxo) => rewards + getKomodoRewards({tiptime, ...utxo}), 0);\n    account.serviceFee = Math.floor((account.rewards / 100) * SERVICE_FEE_PERCENT);\n    account.claimableAmount = account.rewards - account.serviceFee - TX_FEE;\n\n    return account;\n  });\n\n  scanAddresses = async () => {\n    this.props.handleRewardData({\n      accounts: [],\n      tiptime: []\n    });\n\n    this.setState({\n      ...this.initialState,\n      isCheckingRewards: true,\n    });\n\n    let currentAction;\n    try {\n      currentAction = 'connect';\n      updateActionState(this, currentAction, 'loading');\n      const ledgerIsAvailable = await ledger.isAvailable();\n      if (!ledgerIsAvailable) {\n        throw new Error('Ledger device is unavailable!');\n      }\n      updateActionState(this, currentAction, true);\n\n      currentAction = 'approve';\n      updateActionState(this, currentAction, 'loading');\n      let [accounts, tiptime] = await Promise.all([\n        accountDiscovery(),\n        blockchain.getTipTime()\n      ]);\n\n      accounts = this.calculateRewardData({accounts, tiptime});\n      if (accounts.length === 0) {\n        throw new Error('No account balances found.');\n      }\n      updateActionState(this, currentAction, true);\n\n      this.props.handleRewardData({\n        accounts,\n        tiptime\n      });\n\n      this.setState({...this.initialState});\n    } catch (error) {\n      updateActionState(this, currentAction, false);\n      this.setState({error: error.message});\n    }\n  };\n\n  render() {\n    const {isCheckingRewards, actions, error} = this.state;\n\n    return (\n      <>\n        <button className=\"button is-primary\" onClick={this.scanAddresses}>\n          {this.props.children}\n        </button>\n        <ActionListModal\n          title=\"Scanning Blockchain for Rewards\"\n          actions={actions}\n          error={error}\n          handleClose={this.resetState}\n          show={isCheckingRewards}>\n          <p>\n            Exporting public keys from your Ledger device, scanning the blockchain for funds, and calculating any claimable rewards. Please approve any public key export requests on your device.\n          </p>\n        </ActionListModal>\n      </>\n    );\n  }\n\n}\n\nexport default CheckRewardsButton;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","import {INSIGHT_API_URL} from '../constants';\n\nconst get = async (endpoint, postData) => {\n  const opts = {};\n\n  if (postData) {\n    opts.body = JSON.stringify(postData);\n    opts.headers = new Headers();\n    opts.headers.append('Content-Type', 'application/json');\n    opts.headers.append('Content-Length', opts.body.length);\n    opts.method = 'POST';\n  }\n\n  const response = await fetch(`${INSIGHT_API_URL}${endpoint}`, opts);\n  const isJson = response.headers.get('Content-Type').includes('application/json');\n\n  const body = isJson ? await response.json() : await response.text();\n\n  if (!response.ok) {\n    throw new Error(body);\n  }\n\n  return body;\n};\n\nconst getAddress = address => get(`addr/${address}/?noTxList=1`);\n\nconst getUtxos = addresses => get(`addrs/utxo`, {addrs: addresses.join(',')});\n\nconst getTransaction = txid => get(`tx/${txid}`);\n\nconst getRawTransaction = txid => get(`rawtx/${txid}`);\n\nconst getBestBlockHash = () => get('status?q=getBestBlockHash');\n\nconst getBlock = blockHash => get(`block/${blockHash}`);\n\nconst getTipTime = async () => {\n  const {bestblockhash} = await getBestBlockHash();\n  const block = await getBlock(bestblockhash);\n\n  return block.time;\n}\n\nconst broadcast = transaction => get('tx/send', {rawtx: transaction});\n\nconst blockchain = {\n  get,\n  getAddress,\n  getUtxos,\n  getTransaction,\n  getRawTransaction,\n  getBestBlockHash,\n  getBlock,\n  getTipTime,\n  broadcast\n};\n\nexport default blockchain;\n","import TransportU2F from '@ledgerhq/hw-transport-u2f';\nimport Btc from '@ledgerhq/hw-app-btc';\nimport buildOutputScript from 'build-output-script';\nimport bip32Path from 'bip32-path';\nimport createXpub from 'create-xpub';\n\nconst getDevice = async () => {\n  const transport = await TransportU2F.create();\n  const ledger = new Btc(transport);\n\n  ledger.close = () => transport.close();\n\n  return ledger;\n};\n\nconst isAvailable = async () => {\n  const ledger = await getDevice();\n  try {\n    await ledger.getWalletPublicKey(`m/44'/0'/0'/0/0`);\n    await ledger.close();\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nconst getAddress = async (derivationPath, verify) => {\n  const ledger = await getDevice();\n  const {bitcoinAddress} = await ledger.getWalletPublicKey(derivationPath, verify);\n  await ledger.close();\n\n  return bitcoinAddress;\n};\n\nconst createTransaction = async function(utxos, outputs) {\n  const ledger = await getDevice();\n\n  const inputs = await Promise.all(utxos.map(async utxo => {\n    const transactionHex = utxo.rawtx;\n    const isSegwitSupported = undefined;\n    const hasTimestamp = undefined;\n    const hasExtraData = true;\n    const additionals = ['sapling'];\n    const tx = await ledger.splitTransaction(\n      transactionHex,\n      isSegwitSupported,\n      hasTimestamp,\n      hasExtraData,\n      additionals\n    );\n    return [tx, utxo.vout];\n  }));\n  const associatedKeysets = utxos.map(utxo => utxo.derivationPath);\n  const changePath = undefined;\n  const outputScript = buildOutputScript(outputs);\n  const unixtime = Math.floor(Date.now() / 1000);\n  const lockTime = (unixtime - 777);\n  const sigHashType = undefined;\n  const segwit = undefined;\n  const initialTimestamp = undefined;\n  const additionals = ['sapling'];\n  const expiryHeight = Buffer.from([0x00, 0x00, 0x00, 0x00]);\n\n  const transaction = await ledger.createPaymentTransactionNew(\n    inputs,\n    associatedKeysets,\n    changePath,\n    outputScript,\n    lockTime,\n    sigHashType,\n    segwit,\n    initialTimestamp,\n    additionals,\n    expiryHeight\n  );\n\n  await ledger.close();\n\n  return transaction;\n};\n\nconst getXpub = async derivationPath => {\n  const ledger = await getDevice();\n  const {publicKey, chainCode} = await ledger.getWalletPublicKey(derivationPath);\n  const pathArray = bip32Path.fromString(derivationPath).toPathArray();\n  const depth = pathArray.length;\n  const childNumber = ((0x80000000 | pathArray.pop()) >>> 0);\n  const xpub = createXpub({\n    depth,\n    childNumber,\n    publicKey,\n    chainCode\n  });\n  await ledger.close();\n\n  return xpub;\n};\n\nconst ledger = {\n  getDevice,\n  isAvailable,\n  getAddress,\n  createTransaction,\n  getXpub\n};\n\nexport default ledger;\n","import {KOMODO} from './../constants';\nimport bitcoin from 'bitcoinjs-lib';\n\nconst getAddress = publicKey => bitcoin.payments.p2pkh({\n  pubkey: publicKey,\n  network: KOMODO\n}).address;\n\nexport default getAddress;\n","import React from 'react';\nimport Modal from './Modal';\nimport Boolean from './Boolean';\nimport './ActionListModal.scss';\n\nconst ActionListModal = ({children, actions = [], error, success, ...modalProps}) => (\n  <div className=\"ActionListModal\">\n    <Modal isCloseable={error || success} {...modalProps}>\n      {children}\n      <div className=\"panel\">\n        {Object.keys(actions).map(action => {\n          const {icon, description, state} = actions[action];\n\n          return (\n            <div key={action} className={`panel-block ${state === 'loading' ? 'is-active' : ''}`}>\n              <span className=\"left-icon icon has-text-grey\">\n                <i className={icon}></i>\n              </span>\n                {description}\n              <div className=\"right-icon\">\n                {typeof state === 'boolean' ? (\n                  <Boolean value={state} />\n                ) : state === 'loading' ? (\n                  <span className=\"icon has-text-grey\">\n                    <i className=\"fas fa-circle-notch fa-spin\" aria-hidden=\"true\"></i>\n                  </span>\n                ) : null}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {error ? (\n        <div className=\"notification is-danger\">\n          <strong>Error</strong>\n          <p>{error}</p>\n        </div>\n      ) : null}\n\n      {success ? (\n        <div className=\"notification is-success\">\n          <strong>Success</strong>\n          <p>{success}</p>\n        </div>\n      ) : null}\n    </Modal>\n  </div>\n);\n\nexport default ActionListModal;\n","import React from 'react';\nimport './Modal.scss';\n\nconst Modal = ({children, title, show, isCloseable, handleClose}) => (\n  <div className={`Modal modal ${show ? 'is-active' : ''}`}>\n    <div onClick={() => isCloseable && handleClose && handleClose()}>\n      <div className=\"modal-background\"></div>\n      <button className={`modal-close is-large ${!isCloseable ? 'is-invisible' : ''}`}></button>\n    </div>\n    <div className=\"modal-content\">\n      <div className=\"card\">\n        <header className=\"card-header\">\n          <p className=\"card-header-title\">\n            {title}\n          </p>\n        </header>\n        <div className=\"card-content\">\n          <div className=\"content\">\n            {children}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Modal;\n","import React from 'react';\n\nconst Boolean = ({value}) => (\n  <span className={`icon has-text-${value ? 'success' : 'danger'}`}>\n    <i className={`fas fa-${value ? 'check' : 'times'}-circle`}></i>\n  </span>\n);\n\nexport default Boolean;\n"],"sourceRoot":""}